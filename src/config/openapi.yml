openapi: 3.0.0
info:
  title: ClassDojo API docs
  version: 1.0.0
paths:
  "/s3":
    post:
      summary: get s3 bucket link
      description: Get a signed link generated by s3 bucket to allow for direct image upload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/S3Links"

      responses:
        '200':
          description: Generated links for images
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/S3LinksResponse"
  "/analyze":
    post:
      summary: provide the back end with the folder and the relative pictures (individual pics)
      requestBody:
        required: true
        content:
          application/json:
        schema:
          $ref: '#/components/schemas/Analyze'

      responses:
        '201':
          description: Received
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AnalyzeResponse"
components:
  schemas:
    Analyze:
      type: object
      properties:
        folder:
          type: string
      required:
        - folder
      example:
        folder: testVideo1
    S3LinksResponse:
      type: object
      additionalProperties:
        required: true
        type: string

      example:
        imageName.jpg: http://images.localhost:9000/images/dummy.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=root%2F20220507%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220507T123814Z&X-Amz-Expires=604800&X-Amz-Signature=627218060ca95a97b5b0b8413ac00e4eeaf72c7adb746a0b3346e7d59665b807&X-Amz-SignedHeaders=host

    S3Links:
      type: object
      properties:
        images:
          type: array
      required:
        - images
      example:
        images: [imageName.jpg]
    AnalyzeResponse:
      type: object
      properties:
        frameInfo:
        type: array
        peaks:
        type: object
        averages:
        type: object
        valleys:
        type: object
      required:
        - frameInfo
        - averages
        - valleys
        - peaks
      example:
        frameInfo:
          - frameId: 2
            attentionIndex: 3
            moodIndex: 4
            isFrameImportant: true
          - frameId: 3
            attentionIndex: 3
            moodIndex: 3
            isFrameImportant: false
          - frameId: 4
            attentionIndex: 8
            moodIndex: -2
            isFrameImportant: true
        peaks:
          attentionIndex: 8
          moodIndex: 4
        averages:
          attentionIndex: 5.5
          moodIndex: 1
        valleys:
          attentionIndex: 3
          moodIndex: -2

